name: Publish Docker image

on:
  push:
    branches: [ "main" ]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta1
        uses: docker/metadata-action@v4
        with:
          images: johnjosephwayne/evaluation_docker_backend


      - name: Extract metadata (tags, labels) for Docker
        id: meta2
        uses: docker/metadata-action@v4
        with:
          images: johnjosephwayne/evaluation_docker_frontend

      - name: Build and push Docker image (Backend)
        id: pushBack
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Backend/backend_dockerfile
          push: true
          tags: |
            johnjosephwayne/evaluation_docker_backend:latest
          labels: |
            version=1.0
            component=backend

      - name: Build and push Docker image (Frontend)
        id: pushFront
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Frontend/frontend_dockerfile
          push: true
          tags: |
            johnjosephwayne/evaluation_docker_frontend:latest
          labels: |
            version=1.0
            component=frontend

      - name: Generate artifact attestation1
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/johnjosephwayne/evaluation_docker_backend
          subject-digest: ${{ steps.pushBack.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation2
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/johnjosephwayne/evaluation_docker_frontend
          subject-digest: ${{ steps.pushBack.outputs.digest }}
          push-to-registry: true

      - name: Send Notification to Discord
        run: |
          REPO="johnjosephwayne/evaluation_docker"
          BACKEND_TAG="backend-${{ github.sha }}"
          FRONTEND_TAG="frontend-${{ github.sha }}"
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"content\": \"ðŸš€ Nouvelle image Docker publiÃ©e !\\nðŸ”¹ Backend Tag: \`$BACKEND_TAG\`\\nðŸ”¹ Frontend Tag: \`$FRONTEND_TAG\`\\nðŸ“¦ Repo: $REPO\"}" \
          "${{ secrets.DISCORD_WEBHOOK_URL }}"