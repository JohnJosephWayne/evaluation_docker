name: Publish Docker image

on:
  push:
    branches: [ "main" ]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      # Step 1: Check out the repository
      - name: Check out the repo
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Extract metadata (tags, labels) for Docker
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: johnjosephwayne/evaluation.docker

      # Step 4: Debug step to check GitHub SHA and generated tags
      - name: Debug tags
        run: |
          echo "Backend Tag: johnjosephwayne/evaluation.docker:backend-${{ github.sha }}"
          echo "Frontend Tag: johnjosephwayne/evaluation.docker:frontend-${{ github.sha }}"

      # Step 5: Build and push Docker image for Backend
      - name: Build and push Docker image (Backend)
        id: pushBack
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Backend/backend.Dockerfile
          push: true
          tags: |
            johnjosephwayne/evaluation.docker:latest
            johnjosephwayne/evaluation.docker:backend-${{ github.sha }}
          labels: |
            version=1.0
            component=backend

      # Step 6: Build and push Docker image for Frontend
      - name: Build and push Docker image (Frontend)
        id: pushFront
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Frontend/frontend.Dockerfile
          push: true
          tags: |
            johnjosephwayne/evaluation.docker:latest
            johnjosephwayne/evaluation.docker:frontend-${{ github.sha }}
          labels: |
            version=1.0
            component=frontend

      # Step 7: Generate artifact attestation
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/johnjosephwayne/evaluation.docker
          subject-digest: ${{ steps.pushBack.outputs.digest }}
          push-to-registry: true

      # Step 8: Send Notification to Discord
      - name: Send Notification to Discord
        run: |
          # Get the tag dynamically from the backend build step
          REPO="johnjosephwayne/evaluation.docker"
          BACKEND_TAG="backend-${{ github.sha }}"
          FRONTEND_TAG="frontend-${{ github.sha }}"
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"content\": \"Nouvelle image Docker publi√©e !\\nBackend Tag: \`$BACKEND_TAG\`\\nFrontend Tag: \`$FRONTEND_TAG\`\\nRepo: $REPO\"}" \
          "${{ secrets.DISCORD_WEBHOOK_URL }}"
