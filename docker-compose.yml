services:
  # Backend service (Node.js)
  backend:
    build:
      context: .
      dockerfile: ./Backend/backend_dockerfile
    image: johnjosephwayne/evaluation_docker_backend:latest
    networks:
      - backend
      - proxy
    depends_on:
      - db

  # Frontend service (Angular)
  frontend:
    build:
      context: .
      dockerfile: ./Frontend/frontend_dockerfile
    image: johnjosephwayne/evaluation_docker_frontend:latest
    networks:
      - proxy
    depends_on:
      - backend
    volumes:
      - ./dist:/usr/share/nginx/html  # Serve the Angular app with Nginx in production

  # Nginx reverse proxy service
  reverse-proxy:
    image: nginx:1.27
    restart: always
    ports:
      - "80:80"  # Change to 8080 if port 80 is occupied
    volumes:
      - ./reverse-proxy.conf:/etc/nginx/templates/default.conf.template
    networks:
      - proxy
    depends_on:
      - backend
      - frontend

  # MySQL database service
  db:
    image: mysql:latest
    container_name: db
    restart: always
    environment:
      MYSQL_DATABASE: evaluation_db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - dbdata:/var/lib/mysql
    networks:
      - backend

  # PHPMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma_eval
    depends_on:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    restart: always
    ports:
      - "8181:80"
    networks:
      - backend
      - proxy

networks:
  backend:
  proxy:

volumes:
  dbdata:
  app_logs:
  nginx_logs:
